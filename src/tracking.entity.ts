import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';

export abstract class TrackedEvent {
  @PrimaryGeneratedColumn()
  id: number;

  // User identifier
  @Column()
  user: number;

  // Session identifier
  // Generated by the frontend
  @Column()
  session: number;

  // Event date and time
  @Column()
  timestamp: number;

  // URL of the event
  @Column()
  url: string;
}

@Entity()
export class ButtonEvent extends TrackedEvent {
  // Button text
  @Column()
  button_text: string;

  // Button id
  @Column()
  button_id: string;

  // Container name
  @Column()
  container_name: string;
}

@Entity()
export class FormFieldEvent extends TrackedEvent {
  // Form page name
  @Column()
  form_name: string;

  // Input name
  @Column()
  field_name: string;

  // Input type
  @Column()
  field_type: string;

  // Is the field required or optional?
  optional: boolean;

  // Seconds taken by the user to fill in the form
  @Column()
  seconds_taken: number;

  // When field_type is text, amount of characters written
  @Column()
  characters_written: number;

  // When field_type is text, amount of characters deleted
  @Column()
  characters_deleted: number;
}

@Entity()
export class FormPageEvent extends TrackedEvent {
  // Form page name
  @Column()
  form_name: string;

  // Seconds taken by the user to fill in the form
  @Column()
  seconds_taken: number;

  // Amount of fields
  @Column()
  amount_fields: number;

  // Amount of optional fields
  @Column()
  amount_optional_fields: number;

  // Amount of filled fields
  @Column()
  amount_filled_fields: number;
}

@Entity()
export class ScreenEvent extends TrackedEvent {
  // Screen name
  @Column()
  screen_name: string;

  // Possible values:
  // 'enter' -> User entered the screen
  // 'leave' -> User closed the screen
  @Column()
  action: string;
}
